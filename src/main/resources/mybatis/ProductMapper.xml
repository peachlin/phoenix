<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zmsj.phoenix.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.zmsj.phoenix.model.mysql.Product">
    <id column="id" property="id" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zmsj.phoenix.model.mysql.Product"
    extends="BaseResultMap">
    <result column="materialRatio" property="materialRatio" jdbcType="LONGVARCHAR"/>
    <result column="openDefect" property="opendefect" jdbcType="LONGVARCHAR"/>
    <result column="perfQuality" property="perfquality" jdbcType="LONGVARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List">
    id
  </sql>
  <sql id="Blob_Column_List">
    materialRatio, openDefect, perfQuality
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectOne" resultType="com.zmsj.phoenix.model.mysql.Product">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from product limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete
    from product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zmsj.phoenix.model.mysql.Product">
    insert into product (id, materialRatio, openDefect,
                         perfQuality)
    values (#{id,jdbcType=VARCHAR}, #{materialRatio,jdbcType=LONGVARCHAR},
            #{opendefect,jdbcType=LONGVARCHAR},
            #{perfquality,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zmsj.phoenix.model.mysql.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="materialRatio != null">
        materialRatio,
      </if>
      <if test="opendefect != null">
        openDefect,
      </if>
      <if test="perfquality != null">
        perfQuality,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="materialRatio != null">
        #{materialRatio,jdbcType=LONGVARCHAR},
      </if>
      <if test="opendefect != null">
        #{opendefect,jdbcType=LONGVARCHAR},
      </if>
      <if test="perfquality != null">
        #{perfquality,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmsj.phoenix.model.mysql.Product">
    update product
    <set>
      <if test="materialRatio != null">
        materialRatio = #{materialRatio,jdbcType=LONGVARCHAR},
      </if>
      <if test="opendefect != null">
        openDefect = #{opendefect,jdbcType=LONGVARCHAR},
      </if>
      <if test="perfquality != null">
        perfQuality = #{perfquality,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zmsj.phoenix.model.mysql.Product">
    update product
    set materialRatio = #{materialRatio,jdbcType=LONGVARCHAR},
        openDefect    = #{opendefect,jdbcType=LONGVARCHAR},
        perfQuality   = #{perfquality,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>